---
- name: Register existing installation
  tags: magento
  become: "{{ lib_action_become_enable }}"
  become_user: "{{ lib_action_become_user }}"
  register: magento_register_localxml
  stat:
    path: "{{ magento_root }}/app/etc/local.xml"

- name: Set magento_install variable
  tags: magento
  when: not magento_register_localxml.stat.exists
  set_fact:
    magento_install: true

- name: Include Magento Install Tasks
  tags: magento
  when: magento_install
  include: install.yml

- name: Download magento patch files
  tags: magento
  with_items: "{{ magento_patch_files }}"
  include: "{{ magento_path_to_lib_role }}/silpion.lib/tasks/get_url.yml"
  args:
    url: "{{ item.url }}"
    filename: "{{ item.name }}"

- name: Upload patch files to Remote
  tags: magento
  become: "{{ lib_action_become_enable }}"
  become_user: "{{ lib_action_become_user }}"
  with_items: "{{ magento_patch_files }}"
  copy:
    src: "{{ lib_persistent_data_path_local }}/{{ item.name }}"
    dest: "{{ magento_root }}/"

- name: Create patch-script
  tags: magento
  become: "{{ lib_action_become_enable }}"
  become_user: "{{ lib_action_become_user }}"
  template:
    src: patch.j2
    dest: "{{ magento_root }}/patch.sh"

- name: Apply patches
  tags: magento
  become: "{{ lib_action_become_enable }}"
  become_user: "{{ lib_action_become_user }}"
  ignore_errors: true
  command:
    sh patch.sh
  args:
    chdir: "{{ magento_root }}"

- name: Notify permissions verify
  tags: magento
  notify:
    - Verify user
    - Verify permissions
  command: "true"
